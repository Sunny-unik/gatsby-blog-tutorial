{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-hacktoberfest-journey-index-mdx-c1b001d97f98f938777b.js","mappings":"sMAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,SAAU,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,+UAAgV,KAAMG,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,kBAAmB,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,+QAAgR,KAAMG,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,2TAA4T,KAAMG,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,UAAW,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,uTAAwT,KAAMG,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,qXAAsX,KAAMG,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,6OACzkE,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCPA,SAASW,EAAS,GAAyB,IAAxBC,MAAM,IAACC,GAAI,SAAEC,GAAS,EACvC,MAAMC,GAAYC,EAAAA,EAAAA,GAASH,EAAII,YAAYC,cAC3C,OAAOV,EAAAA,cAAoBW,EAAAA,EAAQ,CACjCC,UAAWP,EAAII,YAAYI,OAC1Bb,EAAAA,cAAoBc,EAAAA,EAAa,CAClCC,MAAOR,EACPS,QAAS,OACTC,IAAKZ,EAAII,YAAYS,aACrBC,UAAWC,EAAAA,KACT,aAAc,IAAKpB,EAAAA,cAAoB,MAAO,CAChDqB,MAAO,CACLC,UAAW,MACXC,QAAS,iBAEVlB,EAAII,YAAYe,MAAO,IAAKxB,EAAAA,cAAoB,IAAK,KAAM,KAAM,kBAAmB,IAAKA,EAAAA,cAAoB,IAAK,CACnHyB,KAAMpB,EAAII,YAAYiB,oBACtBC,OAAQ,SACRC,IAAK,cACJvB,EAAII,YAAYoB,qBAAsBvB,EAC3C,CACe,SAASwB,EAAiBtC,GACvC,OAAOQ,EAAAA,cAAoBG,EAAUX,EAAOQ,EAAAA,cAAoB+B,EAAqBvC,GACvF,C,sECKO,MAAMwC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBlC,GAC/B,MAAMmC,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfjC,EACFA,EAAWmC,GAGb,IAAIA,KAAsBnC,IAChC,CAACmC,EAAmBnC,GACzB,C","sources":["webpack://my-first-gatsby-site/./blog/hacktoberfest-journey/index.mdx","webpack://my-first-gatsby-site/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://my-first-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Intro\"), \"\\n\", React.createElement(_components.p, null, \"Hey there, fellow developers! I'm excited to share my journey through Hacktoberfest 2023. I'm not new to the world of open source, but this year I'm first time joining hacktoberfest and my experience was really great. If you want to check out my contributions, you can find them on my GitHub account: https://github.com/sunny-unik.\"), \"\\n\", React.createElement(_components.h2, null, \"Highs and Lows\"), \"\\n\", React.createElement(_components.p, null, \"Throughout this month, I encountered some remarkable highs and a few inevitable lows. Some of my biggest accomplishments included being recognized as a member of the Hall of Fame of Hacktoberfest 2023. It was a light-bulb moment that validated the hard work I put in.\"), \"\\n\", React.createElement(_components.p, null, \"On the other side of the spectrum, there were moments when problems seemed impossible to fix. But that's the beauty of open source, isn't it? The challenges are what make us better. Adapting to these issues taught me resilience and creative problem-solving, which is what the open-source community is all about.\"), \"\\n\", React.createElement(_components.h2, null, \"Growth\"), \"\\n\", React.createElement(_components.p, null, \"Before diving into Hacktoberfest 2023, I didn't have a solid foundation in open source, but this journey took my skill set to new heights. I learned more about effective collaboration, code review, and project management. My learning and career goals evolved as I became more immersed in these new projects.\"), \"\\n\", React.createElement(_components.p, null, \"The Hacktoberfest experience reminded me of the boundless potential of open source. It's not just about writing code; it's about growth, connection, and community. If you're considering participating in Hacktoberfest, I encourage you to embrace the challenge and seize the opportunity for growth. Who knows, it might just be the catalyst for your next big breakthrough.\"), \"\\n\", React.createElement(_components.p, null, \"I express my heartfelt gratitude to @digitalocean_staff for providing an exceptional platform for this journey. Special thanks go out to @thepracticaldev and all the Hacktoberfest 2023 sponsors who've empowered us with these rewards.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/gatsby-blog-tutorial/gatsby-blog-tutorial/blog/hacktoberfest-journey/index.mdx\";\nimport {graphql} from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {fullWidth} from \"../../styles/layout.module.css\";\nfunction BlogPage({data: {mdx}, children}) {\n  const heroImage = getImage(mdx.frontmatter.heroImageSrc);\n  return React.createElement(Layout, {\n    pageTitle: mdx.frontmatter.title\n  }, React.createElement(GatsbyImage, {\n    image: heroImage,\n    loading: \"lazy\",\n    alt: mdx.frontmatter.heroImageAlt,\n    className: fullWidth\n  }), \"Upload on:\", \" \", React.createElement(\"div\", {\n    style: {\n      marginTop: \"6px\",\n      display: \"inline-block\"\n    }\n  }, mdx.frontmatter.date), \" \", React.createElement(\"b\", null, \"|\"), \" Photo Credits:\", \" \", React.createElement(\"a\", {\n    href: mdx.frontmatter.heroImageCreditLink,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, mdx.frontmatter.heroImageCreditText), children);\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        date(formatString: \"dddd Do MM YYYY\")\n        title\n        slug\n        heroImageAlt\n        heroImageCreditLink\n        heroImageCreditText\n        heroImageSrc {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPage","data","mdx","children","heroImage","getImage","frontmatter","heroImageSrc","Layout","pageTitle","title","GatsbyImage","image","loading","alt","heroImageAlt","className","fullWidth","style","marginTop","display","date","href","heroImageCreditLink","target","rel","heroImageCreditText","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}